function result = hu_moment(shape, m)

    switch m
        case 1
            I = normalized_moment(shape, 2, 0) + normalized_moment(shape, 0, 2);
        case 2
            I = (normalized_moment(shape, 2, 0) - normalized_moment(shape, 0, 2))^(2)...
                + (2 * normalized_moment(shape, 1, 1))^(2);
        case 3
            I = (normalized_moment(shape, 3, 0) - 3*normalized_moment(shape, 1, 2))^(2)...
                + (3*normalized_moment(shape, 2, 1) - normalized_moment(shape, 0, 3))^(2);
        case 4
            I = (normalized_moment(shape, 3, 0) + normalized_moment(shape, 1, 2))^(2)...
                + (normalized_moment(shape, 2, 1) + normalized_moment(shape, 0, 3))^(2);
        case 5
            I = (normalized_moment(shape, 3, 0) - 3*normalized_moment(shape, 1, 2))...
                *(normalized_moment(shape, 3, 0) + normalized_moment(shape, 1, 2))...
                *((normalized_moment(shape, 3, 0) + normalized_moment(shape, 1, 2))^(2)...
                -3*(normalized_moment(shape, 2, 1) + normalized_moment(shape, 0, 3))^(2))...
                +(3*normalized_moment(shape, 2, 1) - normalized_moment(shape, 0, 3))...
                *(normalized_moment(shape, 2, 1) + normalized_moment(shape, 0, 3))...
                *(3*(normalized_moment(shape, 3, 0) + normalized_moment(shape, 1, 2))^(2)...
                -(normalized_moment(shape, 2, 1) + normalized_moment(shape, 0, 3))^(2));
        case 6
            I = (normalized_moment(shape, 2, 0) - normalized_moment(shape, 0, 2))...
                *((normalized_moment(shape, 3, 0) + normalized_moment(shape, 1, 2))^(2)...
                -(normalized_moment(shape, 2, 1) + normalized_moment(shape, 0, 3))^(2))...
                +4*normalized_moment(shape, 1, 1)...
                *(normalized_moment(shape, 3, 0) + normalized_moment(shape, 1, 2))...
                *(normalized_moment(shape, 2, 1) + normalized_moment(shape, 0, 3));
        case 7
            I = (3*normalized_moment(shape, 2, 1) - normalized_moment(shape, 0, 3))...
                *(normalized_moment(shape, 3, 0) + normalized_moment(shape, 1, 2))...
                *((normalized_moment(shape, 3, 0) + normalized_moment(shape, 1, 2))^(2)...
                -3*(normalized_moment(shape, 2, 1) + normalized_moment(shape, 0, 3))^(2))...
                -(normalized_moment(shape, 3, 0) - 3*normalized_moment(shape, 1, 2))...
                *(normalized_moment(shape, 2, 1) + normalized_moment(shape, 0, 3))...
                *(3*(normalized_moment(shape, 3, 0) + normalized_moment(shape, 1, 2))^(2)...
                -(normalized_moment(shape, 2, 1) + normalized_moment(shape, 0, 3))^(2));
        otherwise
            disp('The entered m value is not a valid imput');
    end
    result = I;
end